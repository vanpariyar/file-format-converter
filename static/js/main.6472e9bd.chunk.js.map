{"version":3,"sources":["components/mp4ToGif.js","App.js","reportWebVitals.js","index.js"],"names":["ffmpeg","createFFmpeg","log","Mp4ToGif","useState","ready","setReady","video","setVideo","gif","setGif","load","a","useEffect","convertToGif","fetchFile","FS","run","data","url","URL","createObjectURL","Blob","buffer","type","className","controls","width","src","onChange","e","target","files","item","onClick","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAEMA,EAASC,uBAAa,CAAEC,KAAK,IAGpB,SAASC,IAAY,IAAD,EACPC,oBAAS,GADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAEPF,qBAFO,mBAE1BG,EAF0B,KAEnBC,EAFmB,OAGXJ,qBAHW,mBAG1BK,EAH0B,KAGrBC,EAHqB,KAK3BC,EAAI,uCAAG,sBAAAC,EAAA,sEACLZ,EAAOW,OADF,OAEXL,GAAS,GAFE,2CAAH,qDAKVO,qBAAU,WACRF,MACC,IAEH,IAAMG,EAAY,uCAAG,8BAAAF,EAAA,kEAEnBZ,EAFmB,SAEsBe,oBAAUR,GAFhC,+BAEZS,GAFY,UAET,YAAa,WAFJ,eAKbhB,EAAOiB,IAAI,KAAM,WAAY,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,WALxD,OAQbC,EAAOlB,EAAOgB,GAAG,WAAY,WAG7BG,EAAMC,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,EAAKK,QAAS,CAAEC,KAAM,eAChEd,EAAOS,GAZY,4CAAH,qDAelB,OAAOd,EAEL,sBAAKoB,UAAU,WAAf,UACIlB,GAAS,uBACTmB,UAAQ,EACRC,MAAM,MACNC,IAAKR,IAAIC,gBAAgBd,KAG3B,uBAAOiB,KAAK,OAAOK,SAAU,SAACC,GAAD,aAAOtB,EAAQ,UAACsB,EAAEC,OAAOC,aAAV,aAAC,EAAgBC,KAAK,OAElE,wCAEA,wBAAQC,QAASpB,EAAjB,qBAEEL,GAAO,qBAAKmB,IAAKnB,EAAKkB,MAAM,MAAMQ,IAAI,QAMxC,2CC1CSC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAACtB,EAAD,OCISkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6472e9bd.chunk.js","sourcesContent":["import React , { useEffect, useState } from 'react'\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg'\nconst ffmpeg = createFFmpeg({ log: true });\n\n\nexport default function Mp4ToGif() {\n  const [ready, setReady] = useState(false);\n  const [video, setVideo] = useState();\n  const [gif, setGif] = useState();\n\n  const load = async () => {\n    await ffmpeg.load();\n    setReady(true);\n  }\n\n  useEffect(() => {\n    load();\n  }, [])\n\n  const convertToGif = async () => {\n    // Write the file to memory \n    ffmpeg.FS('writeFile', 'test.mp4', await fetchFile(video));\n\n    // Run the FFMpeg command\n    await ffmpeg.run('-i', 'test.mp4', '-t', '2.5', '-ss', '2.0', '-f', 'gif', 'out.gif');\n\n    // Read the result\n    const data = ffmpeg.FS('readFile', 'out.gif');\n\n    // Create a URL\n    const url = URL.createObjectURL(new Blob([data.buffer], { type: 'image/gif' }));\n    setGif(url)\n  }\n\n  return ready ? (\n    \n    <div className=\"Mp4toGif\">\n      { video && <video\n        controls\n        width=\"250\"\n        src={URL.createObjectURL(video)}>\n      </video>}\n\n      <input type=\"file\" onChange={(e) => setVideo(e.target.files?.item(0))} />\n\n      <h3>Result</h3>\n\n      <button onClick={convertToGif}>Convert</button>\n\n      { gif && <img src={gif} width=\"250\" alt=\"\"/>}\n\n    </div>\n  )\n    :\n    (\n      <p>Loading...</p>\n    );\n}\n\n","import React from 'react';\nimport './App.css';\n\nimport Mp4ToGif from './components/mp4ToGif';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mp4ToGif />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}